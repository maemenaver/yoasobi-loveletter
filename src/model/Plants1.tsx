/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
    nodes: {
        ["1Newplan_1"]: THREE.Mesh;
        ["1Newplan_1_1"]: THREE.Mesh;
        ["1Newplan_1_2"]: THREE.Mesh;
        ["1Newplan_1_3"]: THREE.Mesh;
        ["1Newplan_1_4"]: THREE.Mesh;
        ["1Newplan_1_5"]: THREE.Mesh;
        ["1Newplan_1_6"]: THREE.Mesh;
        ["1Newplan_1_7"]: THREE.Mesh;
    };
    materials: {
        ["1Newplan_Intrnd"]: THREE.MeshStandardMaterial;
        ["1Newplan_Stipule"]: THREE.MeshStandardMaterial;
        ["1Newplan_Petiole"]: THREE.MeshStandardMaterial;
        ["1Newplan_Leaf"]: THREE.MeshStandardMaterial;
        ["1Newplan_1Pdncle"]: THREE.MeshStandardMaterial;
        ["1Newplan_1InfInt"]: THREE.MeshStandardMaterial;
        ["1Newplan_1Pdcel"]: THREE.MeshStandardMaterial;
        ["1Newplan_FruitR"]: THREE.MeshStandardMaterial;
    };
};

export default function Model({ ...props }: JSX.IntrinsicElements["group"]) {
    const group = useRef<THREE.Group>();
    const { nodes, materials } = useGLTF("/plants1.gltf") as GLTFResult;
    return (
        <group ref={group} {...props} dispose={null}>
            <mesh
                geometry={nodes["1Newplan_1_1"].geometry}
                material={materials["1Newplan_Stipule"]}
            />
            <mesh
                geometry={nodes["1Newplan_1_7"].geometry}
                material={materials["1Newplan_FruitR"]}
            />
        </group>
    );
}

useGLTF.preload("/plants1.gltf");
